// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should match snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          enabled={true}
                          pointerEvents="auto"
                          removeClippedSubviews={false}
                          style={
                            Array [
                              Object {
                                "flex": 1,
                                "overflow": "hidden",
                              },
                              null,
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              accessibilityElementsHidden={false}
                              importantForAccessibility="auto"
                              style={
                                Array [
                                  Object {
                                    "flex": 1,
                                  },
                                  Object {
                                    "backgroundColor": "rgb(242, 242, 242)",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  onLayout={[Function]}
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    pointerEvents="box-none"
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      style={
                                        Object {
                                          "opacity": 1,
                                        }
                                      }
                                    />
                                    <View
                                      accessibilityElementsHidden={false}
                                      closing={false}
                                      gestureVelocityImpact={0.3}
                                      importantForAccessibility="auto"
                                      onClose={[Function]}
                                      onGestureBegin={[Function]}
                                      onGestureCanceled={[Function]}
                                      onGestureEnd={[Function]}
                                      onOpen={[Function]}
                                      onTransition={[Function]}
                                      pointerEvents="box-none"
                                      style={
                                        Array [
                                          Object {
                                            "overflow": undefined,
                                          },
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                        ]
                                      }
                                      transitionSpec={
                                        Object {
                                          "close": Object {
                                            "animation": "spring",
                                            "config": Object {
                                              "damping": 500,
                                              "mass": 3,
                                              "overshootClamping": true,
                                              "restDisplacementThreshold": 10,
                                              "restSpeedThreshold": 10,
                                              "stiffness": 1000,
                                            },
                                          },
                                          "open": Object {
                                            "animation": "spring",
                                            "config": Object {
                                              "damping": 500,
                                              "mass": 3,
                                              "overshootClamping": true,
                                              "restDisplacementThreshold": 10,
                                              "restSpeedThreshold": 10,
                                              "stiffness": 1000,
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <View
                                        needsOffscreenAlphaCompositing={false}
                                        pointerEvents="box-none"
                                        style={
                                          Object {
                                            "flex": 1,
                                            "marginTop": 0,
                                          }
                                        }
                                      >
                                        <View
                                          collapsable={false}
                                          forwardedRef={[Function]}
                                          onGestureHandlerEvent={[Function]}
                                          onGestureHandlerStateChange={[Function]}
                                          style={
                                            Object {
                                              "flex": 1,
                                              "transform": Array [
                                                Object {
                                                  "translateX": 0,
                                                },
                                                Object {
                                                  "translateX": 0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            pointerEvents="none"
                                            style={
                                              Object {
                                                "backgroundColor": "rgb(242, 242, 242)",
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "absolute",
                                                "shadowColor": "#000",
                                                "shadowOffset": Object {
                                                  "height": 1,
                                                  "width": -1,
                                                },
                                                "shadowOpacity": 0.3,
                                                "shadowRadius": 5,
                                                "top": 0,
                                                "width": 3,
                                              }
                                            }
                                          />
                                          <View
                                            style={
                                              Array [
                                                Object {
                                                  "flex": 1,
                                                  "overflow": "hidden",
                                                },
                                                Array [
                                                  Object {
                                                    "backgroundColor": "rgb(242, 242, 242)",
                                                  },
                                                  undefined,
                                                ],
                                              ]
                                            }
                                          >
                                            <View
                                              style={
                                                Object {
                                                  "flex": 1,
                                                  "flexDirection": "column-reverse",
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "flex": 1,
                                                  }
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  pointerEvents="box-none"
                                  style={
                                    Object {
                                      "height": 64,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                      "zIndex": 1,
                                    }
                                  }
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        pointerEvents="auto"
                        style={
                          Object {
                            "backgroundColor": "rgb(255, 255, 255)",
                            "borderTopColor": "rgb(216, 216, 216)",
                            "borderTopWidth": 0.5,
                            "bottom": 0,
                            "elevation": 8,
                            "height": 49,
                            "left": 0,
                            "paddingBottom": 0,
                            "paddingHorizontal": 0,
                            "position": null,
                            "right": 0,
                            "transform": Array [
                              Object {
                                "translateY": 0,
                              },
                            ],
                          }
                        }
                      >
                        <View
                          onLayout={[Function]}
                          style={
                            Object {
                              "flex": 1,
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            accessibilityLabel="Home, tab, 1 of 2"
                            accessibilityRole="button"
                            accessibilityState={
                              Object {
                                "selected": true,
                              }
                            }
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flex": 1,
                                },
                                Object {
                                  "backgroundColor": "transparent",
                                },
                                Object {
                                  "flexDirection": "column",
                                  "justifyContent": "flex-end",
                                },
                                undefined,
                              ]
                            }
                          />
                          <View
                            accessibilityLabel="About, tab, 2 of 2"
                            accessibilityRole="button"
                            accessibilityState={
                              Object {
                                "selected": false,
                              }
                            }
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flex": 1,
                                },
                                Object {
                                  "backgroundColor": "transparent",
                                },
                                Object {
                                  "flexDirection": "column",
                                  "justifyContent": "flex-end",
                                },
                                undefined,
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
